('\t', "apply plugin: 'groovy'")
('\t', "apply plugin: 'maven'")
('\t', "apply plugin: 'signing'")
('\t', '')
('\t', 'repositories {')
('\t', '    mavenCentral()')
('\t', '    maven {')
('\t', "        name = 'WASdev Repository'")
('\t', "        url = 'http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/maven/repository/'")
('\t', '    }')
('\t', '    maven {')
('\t', "        name = 'Sonatype Nexus Snapshots'")
('\t', "        url = 'https://oss.sonatype.org/content/repositories/snapshots/'")
('\t', '    }')
('\t', '}')
('\t', 'configurations {')
('\t', '    provided')
('\t', '}')
('\t', 'buildscript {')
('\t', '  repositories {')
('\t', '    maven {')
('\t', "      url 'https://plugins.gradle.org/m2/'")
('\t', '    }')
('\t', '  }')
('\t', '  dependencies {')
('\t', "    classpath 'net.researchgate:gradle-release:2.4.0'")
('\t', '  }')
('\t', '}')
('\t', '')
('\t', "apply plugin: 'net.researchgate.release'")
('\t', '')
('\t', 'dependencies {')
('\t', '    compile gradleApi()')
('\t', '    compile localGroovy()')
('\t', "    compile ('net.wasdev.wlp.ant:wlp-anttasks:1.3-SNAPSHOT')")
('\t', "    provided group: 'com.ibm.websphere.appserver.api', name: 'com.ibm.websphere.appserver.spi.kernel.embeddable', version: '1.0.0'")
('\t', "    testCompile 'junit:junit:4.11'")
('\t', '}')
('\t', '')
('\t', 'sourceSets {')
('\t', '    integrationTest {')
('\t', "        groovy.srcDir file('src/integTest/groovy')")
('\t', "        resources.srcDir file('src/integTest/resources')")
('\t', '        compileClasspath = sourceSets.main.output + configurations.testRuntime')
('\t', '        runtimeClasspath = output + compileClasspath')
('\t', '    }')
('\t', '}')
('\t', 'task integrationTest(type: Test) {')
('\t', '    logging.level = LogLevel.INFO')
('\t', "    description = 'Runs the integration tests.'")
('\t', '    testClassesDir = sourceSets.integrationTest.output.classesDir')
('\t', '    classpath = sourceSets.integrationTest.runtimeClasspath')
('\t', "    if (!(project.hasProperty('runit'))) {")
('\t', '        enabled = false')
('\t', '    } else {')
('\t', '        systemProperties System.getProperties()')
('\t', "        systemProperty 'runit',runit")
('\t', '    }')
('\t', '    mustRunAfter test')
('\t', '}')
('\t', '')
('\t', 'check.dependsOn integrationTest')
('\t', 'sourceSets.main.compileClasspath += configurations.provided')
('\t', '')
('\t', 'task wrapper(type: Wrapper) {')
('\t', "    gradleVersion = '1.11'")
('\t', '}')
('\t', '')
('\t', "archivesBaseName = 'liberty-gradle-plugin'")
('\t', "group = 'net.wasdev.wlp.gradle.plugins'")
('\t', "'version = 1.2'")
('\t', '')
('\t', 'task sourcesJar(type: Jar) {')
('\t', "    classifier = 'sources'")
('\t', '    from sourceSets.main.allSource')
('\t', '}')
('\t', '')
('\t', 'task groovydocJar(type: Jar) {')
('\t', "    classifier = 'groovydoc'")
('\t', '    from groovydoc')
('\t', '}')
('\t', '')
('\t', 'artifacts {')
('\t', '    archives groovydocJar, sourcesJar')
('\t', '}')
('\t', '')
('\t', 'if (!version.endsWith("SNAPSHOT")) {')
('\t', '    signing {')
('\t', '        sign configurations.archives')
('\t', '    }')
('\t', '}')
('\t', '')
('\t', "if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {")
('\t', '  uploadArchives {')
('\t', '    repositories {')
('\t', '      mavenDeployer {')
('\t', '        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }')
('\t', '')
('\t', '        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {')
('\t', '          authentication(userName: ossrhUsername, password: ossrhPassword)')
('\t', '        }')
('\t', '')
('\t', '        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {')
('\t', '          authentication(userName: ossrhUsername, password: ossrhPassword)')
('\t', '        }')
('\t', '')
('\t', '        pom.project {')
('\t', "          name 'liberty-gradle-plugin'")
('\t', "          packaging 'jar'")
('\t', "          description 'Liberty Gradle Plug-in.'")
('\t', "          url 'https://wasdev.github.io'")
('\t', '')
('\t', '          scm {')
('\t', "            connection 'scm:git:git@github.com:jjvilleg/ci.gradle.git'")
('\t', "            developerConnection 'scm:git:git@github.com:jjvilleg/ci.gradle.git'")
('\t', "            url 'git@github.com:jjvilleg/ci.gradle.git'")
('\t', "tag  'liberty-gradle-plugin-1.2'")
('\t', '          }')
('\t', '')
('\t', '          licenses {')
('\t', '            license {')
('\t', "              name 'The Apache Software License, Version 2.0'")
('\t', "              url 'https://raw.github.com/WASdev/ci.gradle/master/LICENSE'")
('\t', '            }')
('\t', '          }')
('\t', '')
('\t', '          developers {')
('\t', '            developer {')
('\t', "              id 'jgawor'")
('\t', "              name 'Jarek Gawor'")
('\t', "              email 'jgawor@gmail.com'")
('\t', '            }')
('\t', '          }')
('\t', '        }')
('\t', '      }')
('\t', '    }')
('\t', '  }')
('\t', '}')
